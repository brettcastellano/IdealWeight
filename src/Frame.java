/*
Prompts user for name, system of measure and height,
calculates and displays a healthy weight for user, using a formula
produced from the formula for body mass index
April 26, 2017
Brett Castellano
 */

/**
 *
 * @author brcas1396
 */
import java.text.*;
public class Frame extends javax.swing.JFrame {

    /**
     * Creates new form Frame
     */
    public Frame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Title = new javax.swing.JLabel();
        namePrompt = new javax.swing.JLabel();
        nameInput = new javax.swing.JTextField();
        systemPrompt = new javax.swing.JLabel();
        systemInput = new javax.swing.JTextField();
        metricOrImperial = new javax.swing.JLabel();
        heightPrompt = new javax.swing.JLabel();
        metresOrInches = new javax.swing.JLabel();
        heightInput = new javax.swing.JTextField();
        calculate = new javax.swing.JButton();
        finalSentence = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        menu_File = new javax.swing.JMenu();
        menu_Quit = new javax.swing.JMenuItem();
        menu_Edit = new javax.swing.JMenu();
        menu_Help = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Title.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        Title.setForeground(new java.awt.Color(102, 51, 255));
        Title.setText("Ideal Weight Calculator");

        namePrompt.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        namePrompt.setText("Name: ");

        systemPrompt.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        systemPrompt.setText("System of Measure:");

        metricOrImperial.setText("(M)etric or (I)mperial");

        heightPrompt.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        heightPrompt.setText("Height:");

        metresOrInches.setText("metres or inches");

        calculate.setText("Calculate");
        calculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateActionPerformed(evt);
            }
        });

        finalSentence.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        finalSentence.setForeground(new java.awt.Color(255, 0, 0));

        menu_File.setText("File");

        menu_Quit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        menu_Quit.setText("Quit");
        menu_Quit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_QuitActionPerformed(evt);
            }
        });
        menu_File.add(menu_Quit);

        menuBar.add(menu_File);

        menu_Edit.setText("Edit");

        menu_Help.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        menu_Help.setText("Help");
        menu_Edit.add(menu_Help);

        menuBar.add(menu_Edit);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(calculate)
                .addGap(97, 97, 97))
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(finalSentence, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 42, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(namePrompt)
                            .addComponent(metricOrImperial)
                            .addComponent(systemPrompt)
                            .addComponent(metresOrInches)
                            .addComponent(heightPrompt))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(systemInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nameInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(heightInput, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(104, 104, 104))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Title)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Title)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(namePrompt)
                    .addComponent(nameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(systemPrompt)
                    .addComponent(systemInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addComponent(metricOrImperial)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(heightPrompt)
                    .addComponent(heightInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(metresOrInches)
                .addGap(27, 27, 27)
                .addComponent(calculate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(finalSentence, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void calculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateActionPerformed
       
        boolean isMetric;
        double weight, height;
        String name = nameInput.getText();      //get name from user
        String system = systemInput.getText();      //get system of measure from user
        DecimalFormat x = new DecimalFormat("###.00");      //round to two decimal places
        
        system = system.toLowerCase();      //user can input "M" or "m"
        
        /*use system of measure given by user */
        if (system.equals("m")) {
            isMetric = true;
        }else {
            isMetric = false;
        }
        
        height = Double.parseDouble(heightInput.getText());     //get height from user
        
        if (isMetric) {
            weight = (height * height * 25);        //calculate ideal weight in metric
            finalSentence.setText(name + "'s ideal weight is " + (x.format(weight)) + " kgs");
        } else {
            weight = (height * height * 25 / 703);      //calculate ideal weight in imperial
            finalSentence.setText(name + "'s ideal weight is " + (x.format(weight)) + " lbs");
        }
        
        
    }//GEN-LAST:event_calculateActionPerformed

    private void menu_QuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_QuitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_menu_QuitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Title;
    private javax.swing.JButton calculate;
    private javax.swing.JLabel finalSentence;
    private javax.swing.JTextField heightInput;
    private javax.swing.JLabel heightPrompt;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu menu_Edit;
    private javax.swing.JMenu menu_File;
    private javax.swing.JMenuItem menu_Help;
    private javax.swing.JMenuItem menu_Quit;
    private javax.swing.JLabel metresOrInches;
    private javax.swing.JLabel metricOrImperial;
    private javax.swing.JTextField nameInput;
    private javax.swing.JLabel namePrompt;
    private javax.swing.JTextField systemInput;
    private javax.swing.JLabel systemPrompt;
    // End of variables declaration//GEN-END:variables
}
